import logging

log = logging.getLogger(__name__)


class Vulnerability(object):
    def __init__(self, category, issue_name, severity, description, line_number=None, file_object=None):
        """
        Create a vulnerability, used by Plugins.

        :param str category: category to put the vulnerability in the report
        :param severity: severity of the vulnerability, "info"=0, "warning"=1, "error"=2, "vulnerability"=3
        :param line_number: line number of where the vulnerability was found
        :param file_object: file where the vulnerability occurred
        """
        self.category = category

        # convert severity to its int enum
        if not isinstance(severity, int):
            if isinstance(severity, str):
                if severity.lower() == "info":
                    severity = Severity.INFO
                if severity.lower() == "vulnerability":
                    severity = Severity.VULNERABILITY
                elif severity.lower() == "error":
                    severity = Severity.ERROR
                elif severity.lower() == "warning":
                    severity = Severity.WARNING
            else:
                log.info("Severity is not set for issue. Setting severity to a warning.")
                severity = Severity.WARNING

        self.severity = severity
        self.description = description
        self.issue_name = issue_name
        self.line_number = line_number
        self.file_object = file_object


class Severity(object):
    INFO = 0
    WARNING = 1
    ERROR = 2
    VULNERABILITY = 3
