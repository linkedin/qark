[qarkhelper]

STARTUP= Initializing...

MAX_API_VERSION=23

PATH_PROMPT_APK=\nPlease enter the full path to your APK (ex. /foo/bar/pineapple.apk):

PATH_APK=Path:

SHOW_MANIFEST=\nView parsed AndroidManifest.xml? [Y/N]:

ANDROID_SDK_MANAGER_PATH_PROMPT =Please enter the fullpath to your Android SDK root directory:

SDK_INSTALLATION_IDENTIFIED = Identified Android SDK installation from a previous run.

ANDROID_SDK_MANAGER_PATH_PROMPT_AGAIN =That doesnt seem to be the root directory of Android SDK. Please try again.\n

ANDROID_SDK_INFO=\nCertain functionalities in QARK rely on using Android SDK. You may have an existing Android SDK on your system that you may want to use.\nIf not, QARK makes it easier for you to download the required components from Android SDK, automatically. If you select "n" to the following option, you would be asked to provide a location to the Android SDK manually.\nIt is recommended that you let QARK download and setup Android SDK. This will not affect any existing Android SDK setup you may have on your system.\n

FILE_DOWNLOADED_TO=\nFile downloaded to

UNPACKING=\nUnpacking  Android SDK Manager...

GET_ANDROID_SDK_MANAGER_PROMPT =Do you want QARK to download and set up Android SDK?[y/n] :

PATH_PROMPT_MANIFEST=Please enter the path to your app's manifest:

APK_OR_SOURCE_PROMPT=\nDo you want to examine:\n[1] APK\n[2] Source\n

ENTER_YOUR_CHOICE=Enter your choice:

APK_PATH_OR_FROM_PHONE=\nDo you want to:\n[1] Provide a path to an APK\n[2] Pull an existing APK from the device?\n

TRUST_ME=In order to pull the APK, you must have the device already trusted on this computer.

EXPLOIT_CHOICE =\nFor the potential vulnerabilities, do you want to:\n[1] Create a custom APK for exploitation\n[2] Exit

DECOMPILE_CHOICE = \n[1] Exit\n[2] Begin Static Code Analysis

SELECT_AN_APK=Select an APK

APP_ELEM_ISSUE= Problem parsing application element.

SOURCE_CONFIRM =Proceed with this path?

USESDK_MISS= The uses-sdk element is not present. This is common in APKs pulled from the Play Store.

GEN_OUTPUT_WARN= If this app was not from the Play store, there may be a problem with the manifest. We can attempt to determine the supported SDK versions from the Play Store (requires Internet), or you can enter it manually.

CAN_CHECK_PLAY= If this app is from the Play store, we can attempt to obtain the minSdkVersion (requires Internet).

NO_PACK_NAME= The package name was not found in the manifest, please specify it here (mandatory ex: com.foo.bar):

DET_SDK_PROMPT=Would you like us to attempt to determine the minSdkVersion value? (Y/N)

CANT_DET_PLAY= Sorry, we can't determine the minSdkVersion from the Play Store.

PROMPT_VER=Please enter a number representing the minSdkVersion value (1-

PROMPT_VER2=). Only version 7 and higher are currently supported for automatically built exploit APK, but you can still scan older. If you are unsure, 8 is a realistic guess. If a version higher is available, we will be updating very soon:

NO_MIN_SDK=We could not determine the minSdkVersion value. We can proceed with an conservative setting of 7, which will cover all Android OS, or you can enter a version manually 

PROMPT_MIN_SDK=Would you prefer to enter a minSdkVersion manually? (Y/N)

LOGS_WR= Logs are world readable on pre-4.1 devices. A malicious app could potentially retrieve sensitive data from the logs.

DEF_SDK= No minSdkVersion configured - defaults to 7, could cause crashes.

MAX_VER_INFO= Setting maxSdkVersion not recommended, unless you explicitly want to prevent use on newer versions.

WARN_FOLL= The following 

PERM_SNATCH= are exported and protected by a permission, but the permission can be obtained by malicious apps installed prior to this one. More info: https://github.com/commonsguy/cwac-security/blob/master/PERMS.md. Failing to protect

VULN_MAL= could leave them vulnerable to attack by malicious apps. The 

VULN_TYPES= should be reviewed for vulnerabilities, such as injection and information leakage.

EXP_NO_PERM= are exported, but not protected by any permissions. Failing to protect 

ERR_DET_EXP= Could not obtain 'exported' value - please review manifest.

PACK_FOUND=Package name found.

DETD_VER=We determined the version to be: 

STORE_URL=https%3A%2F%2Fplay.google.com%2Fstore%2Fapps%2Fdetails%3Fid%3D

TSK_TSK_1= What are you up to? Setting to minSdkVersion to 7.

WARN_BACK= Backups enabled: Potential for data theft via local attacks via adb backup, if the device has USB debugging enabled (not common). More info: http://developer.android.com/reference/android/R.attr.html#allowBackup

WARN_BACK_MISSING= The backup element is not specified in the manifest, which therefore defaults to true. Potential for data theft via local attacks via adb backup, if the device has USB debugging enabled (not common). More info: http://developer.android.com/reference/android/R.attr.html#allowBackup

BACK_OK= Backups not enabled.

NO_PERM_PROT= A permission element is declared in the manifest without a protectionLevel specified. You should review this and ensure to set the proper protectionLevel: http://developer.android.com/guide/topics/manifest/permission-element.html#plevel

PERM_SNATCH_SIG=can be obtained by malicious apps installed prior to this one, without the proper signature. Applicable to Android Devices prior to L (Lollipop). More info: https://github.com/commonsguy/cwac-security/blob/master/PERMS.md.

START_STATIC=Beginning Static Code Analysis.

SOURCE_PROMPT=Please enter the top-level directory for the project or decompiled APK:

ANDROID_ID= Apps and app updates distributed through Google Play must use the advertising ID in lieu of any other persistent identifiers for any advertising purposes, on devices that support the advertising ID. You should review these occurrences for potential violations. More info: https://developer.android.com/google/play-services/id.html. You may wish to review the following for potential issues (not a security issue):

JS_WARNING= While not a vulnerability by itself, it appears this app has JavaScript enabled in this WebView. If this is not expressly necessary, you should disable it, to prevent the possibility of XSS (cross-site scripting) attacks. More info: http://developer.android.com/guide/practices/security.html. To validate this vulnerability, load the following local file in this WebView: file://<install_dir>/quark/poc/html/JS_WARNING.html

TERMINAL_JS_WARNING =  While not a vulnerability by itself, it appears this app has JavaScript enabled in this WebView:

TERMINAL_JS_WARNING1= If this is not expressly necessary, you should disable it, to prevent the possibility of XSS (cross-site scripting) attacks. More info: http://developer.android.com/guide/practices/security.html

JS_OK= JS not enabled on this webView.

WV_CPA_WARNING= While not a vulnerability by itself, it appears this app does not explicitly disable Content Provider access from WebViews. If the WebViews take in untrusted input, this can allow for data theft. To validate this vulnerability, load the following local file in this WebView: file://<install_dir>/quark/poc/html/WV_CPA_WARNING.html

TERMINAL_WV_CPA_WARNING= While not a vulnerability by itself, it appears this app does not explicitly disable Content Provider access from WebViews. If the WebViews take in untrusted input, this can allow for data theft.

WV_CPA_OK= WebViews do NOT have access to Content Providers.

BURL_WARNING1= This webView sets the BaseURL. You should verify that this is only loading content from this domain. Loading content from a domain you do not control, or using plain-text HTTP, leaves this vulnerable to injection attacks against the BaseURL domain. To validate this vulnerability, load the following local file in this WebView: file://<install_dir>/quark/poc/html/BURL_WARNING.html

TERMINAL_BURL_WARNING1 = This webView sets the BaseURL.

TERMINAL_BURL_WARNING2= You should verify that this is only loading content from this domain. Loading content from a domain you do not control, or using plain-text HTTP, leaves this vulnerable to injection attacks against the BaseURL domain.



BURL_OK= BaseURL not redefined in this WebView. 

FILE_SYS_OK= File access disabled in this WebView. Note that this enables or disables file system access only. Assets and resources are still accessible using file:///android_asset and file:///android_res.

FILE_SYS_WARN1= File system access is enabled in this WebView. If untrusted data is used to specify the URL opened by this WebView, a malicious app or site may be able to read your app's private files, if it returns the response to them. To validate this vulnerability, load the following local file in this WebView: file://<install_dir>/quark/poc/html/FILE_SYS_WARN.html

TERMINAL_FILE_SYS_WARN1= File system access is enabled in this WebView.

TERMINAL_FILE_SYS_WARN2= If untrusted data is used to specify the URL opened by this WebView, a malicious app or site may be able to read your app's private files, if it returns the response to them.

FILE_SYS_WARN2= If untrusted data is used to specify the URL opened by this WebView, a malicious app or site may be able to read your app's private files, if it returns the response to them.

UNIV_FILE_WARNING= JavaScript running in a file scheme context can access content from any origin. This is an insecure default value for minSdkVersion < 16 or may have been overridden (setAllowUniversalAccessFromFileURLs) in later versions. To validate this vulnerability, load the following local file in this WebView: file://<install_dir>/quark/poc/html/UNIV_FILE_WARNING.html

TERMINAL_UNIV_FILE_WARNING= JavaScript running in a file scheme context can access content from any origin. This is an insecure default value for minSdkVersion < 16 or may have been overridden (setAllowUniversalAccessFromFileURLs) in later versions.

UNIV_FILE_OK= JavaScript running in file scheme content CAN NOT access content from other origins (setAllowUniversalAccessFromFileURLs=false).

FURL_FILE_WARNING= JavaScript running in a file scheme context can access content from any origin. This is an insecure default value for minSdkVersion < 16 or may have been overridden (setAllowFileAccessFromFileURLs) in later versions. To validate this vulnerability, load the following local file in this WebView: file://<install_dir>/qark/poc/html/FURL_FILE_WARNING.html

TERMINAL_FURL_FILE_WARNING= JavaScript running in a file scheme context can access content from any origin. This is an insecure default value for minSdkVersion < 16 or may have been overridden (setAllowFileAccessFromFileURLs) in later versions.

FURL_FILE_OK= JavaScript running in file scheme content CAN NOT access content from other origins (setAllowFileAccessFromFileURLs = false). 

DEPRECATED_SINCE_9= setPluginsEnabled has been deprecated since API 9 and is removed in 18. You should update this code.  

REMOVED_IN_18= setPluginsEnabled has been deprecated since API 9 and is removed in 18. You should update this code.

ADDED_IN_8= setPluginState wasn't added until API 8.

DEPRECATED_IN_18= setPluginState was deprecated in API 18 and will likely be removed. You should update this code.

BAD_JS_INT= This webview uses the addJavascriptInterface method in a pre-API 17 app, which exposes all public methods to Javascript running in the WebView. If this webview loads untrusted content or trusted content over plain-text HTTP, this represents a MAJOR issue! Reference: https://labs.mwrinfosecurity.com/blog/2013/09/24/webview-addjavascriptinterface-remote-code-execution/. To validate this vulnerability, load the following local file in this WebView: file://<install_dir>/quark/poc/html/BAD_JS_INT.html

TERMINAL_BAD_JS_INT= This webview uses the addJavascriptInterface method in a pre-API 17 app, which exposes all public methods to Javascript running in the WebView. If this webview loads untrusted content or trusted content over plain-text HTTP, this represents a MAJOR issue!

OK_JS_INT= addJavascriptInterface on post API 17, @JavascriptInterface notation must be explicit, assuming safe for now.

NO_JS_INT= addJavascriptInterface not used in this WebView.

DOM_STORAGE_EN= DOM Storage enabled for this WebView, there is a potential for caching sensitive information. 

DOM_STORAGE_DIS= DOM Storage not enabled for this WebView.

WW_FILE= World writable file !!! Code: 

WR_FILE= World readable file !!! Code: 

WEBVIEW_SOP_WARNING= All Webviews in JellyBean (4.3 - API <= 18) have catastrophic Same Origin Policy Flaws. You should not support these versions, unless your WebView never loads content from external domains. Google no longer supports patching the browser used in these WebViews: http://stanford.edu/~pcm2d/blog/webview_sop.html.

EXPLOIT_OPTION_1= What would you like to exploit? 

NOT_A_VALID_OPTION= Not a valid option

NOT_A_VALID_OPTION_INTERACTIVE= Not a valid option. Please try again

NOT_A_VALID_APK= doesnt look like a valid APK

NOT_A_VALID_APK_INTERACTIVE= Not a valid APK. Please try again

MIN_SDK_VERSION= Determined minimum SDK version to be: 

SDK_VALUE_MANUAL= Would you prefer to ignore this and enter a value manually? (y/n): 

MIN_SDK_PLAY_STORE_FAILED= Failed to retrieve Minimum SDK version from Play Store

DETERMINING_SDK_VERSION= Trying to find sdk version

CANT_FIND_MANIFEST=AndroidManifest.xml not found within any of the subfolders.
