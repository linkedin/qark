from __future__ import absolute_import

'''Copyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'''


class ExploitType:
    """
    Enum type for exploitation category
    """
    MANIFEST, ACTIVITY, INTENT, PERMISSION, SERVICE, RECEIVER, BROADCAST_INTENT, CERTIFICATE, WEBVIEW, CRYPTO, PLUGIN = range(
        11)


class createExploit():
    def exploitReceiver(self):
        return exploitReceiver

    def exploitBroadcast(self):
        return exploitBroadcast

    def exploitActivity(self):
        return exploitActivity

    def exploitContentProvider(self):
        return exploitContentProvider

    def exploitIntentSniffer(self):
        return exploitIntentSniffer

    def exploitService(self):
        return exploitService


class exploitIntentSniffer():
    type = "intentSniffer"
    parent = "intentSniffers"
    id = 0

    def getType(self):
        return self.type

    def getBroadcast(self):
        return self.broadcast

    def setBroadcast(self, broadcast):
        self.broadcast = broadcast


class exploitReceiver(list):
    type = "receiver"
    parent = "exportedReceivers"
    id = 1
    intent = ""

    def setExtra(self, key):
        self.append(key)

    def getExtra(self):
        return self

    def setIntent(self, intent):
        self.intent = intent

    def getIntent(self):
        return self.intent

    def getType(self):
        return self.type


class exploitContentProvider(list):
    type = "provider"
    parent = "exportedContentProviders"
    id = 2
    intent = ""

    def setExtra(self, key):
        self.append(key)

    def getExtra(self):
        return self

    def setIntent(self, intent):
        self.intent = intent

    def getIntent(self):
        return self.intent

    def getType(self):
        return self.type


class exploitActivity(list):
    type = "activity"
    parent = "exportedActivities"
    id = 3
    intent = ""
    activity = ""

    def setExtra(self, key):
        self.append(key)

    def getExtra(self):
        return self

    def setIntent(self, intent):
        self.intent = intent

    def getIntent(self):
        return self.intent

    def getType(self):
        return self.type

    def getExportedActivity(self):
        return self.activity

    def setExportedActivity(self, activity):
        self.activity = activity


class exploitBroadcast(list):
    type = "broadcast"
    parent = "exportedBroadcasts"
    id = 4
    intent = ""

    def setExtra(self, key):
        self.append(key)

    def getExtra(self):
        return self

    def setIntent(self, intent):
        self.intent = intent

    def getIntent(self):
        return self.intent

    def getType(self):
        return self.type


class exploitService(list):
    type = "service"
    parent = "exportedServices"
    id = 5
    intent = ""

    def setExtra(self, key):
        self.append(key)

    def getExtra(self):
        return self

    def setIntent(self, intent):
        self.intent = intent

    def getIntent(self):
        return self.intent

    def getType(self):
        return self.type
